package com.bill.java.api.param;

import com.bill.java.api.models.RecurringBill;
import com.google.gson.annotations.SerializedName;

import java.util.List;
import java.util.function.Consumer;

/**
 * Parameters for creating a RecurringBillCreateRequestParams through the BDC API
 */
public class RecurringBillCreateRequestParams extends ApiResourceParams {
    /* Holds the actual api resource variables for creation */
    @SerializedName("obj")
    protected final Params params;

    private RecurringBillCreateRequestParams(Params params) { this.params = params; }

    /**
     * Makes a new Builder for RecurringBillCreateRequestParams
     *
     * @return a builder for RecurringBillCreateRequestParams
     */
    public static Builder builder() { return new Builder(); }

    /**
     * Builds an RecurringBillCreateRequestParams instance
     */
    public static class Builder {
        /**
         * Denotes if object is active or inactive. Inactive objects are hidden by default and are only visible in UI when user clicks.
         * <p>
         * "1" - Active
         * "2" - Inactive
         */
        public String isActive;

        /**
         * 	Id of the vendor that is used for generated bills.
         */
        public String vendorId;

        /**
         * "9" - none
         * "0" - Day
         * "1" - Week
         * "2" - Month
         * "3" - Year
         */
        public String timePeriod;

        public Integer frequencyPerTimePeriod;

        /**
         * 	Sets the Due Date of the next bill to be generated by this Recurring Bill profile
         */
        public String nextDueDate;

        /**
         * Date after which this Recurring Bill Profile will no longer generate bills.
         */
        public String endDate;

        /**
         * Number of days prior to nextDueDate that the next bill is generated. If this date has already occurred for one or more bills, those bills will be generated.
         */
        public Integer daysInAdvance;

        /**
         *	Description used for generated bills.
         */
        public String description;

        /**
         * List of line items belonging to the RecurringBill
         */
        public List<RecurringBill.RecurringBillLineItem> recurringBillLineItems;

        public Builder with(Consumer<Builder> builderFunction) {
            builderFunction.accept(this);
            return this;
        }

        /**
         * Builds an RecurringBillCreateRequestParams instance with the set parameters.
         *
         * @return RecurringBillCreateRequestParams
         */
        public RecurringBillCreateRequestParams build() {
            return new RecurringBillCreateRequestParams(
                    new Params(
                            isActive,
                            vendorId,
                            timePeriod,
                            frequencyPerTimePeriod,
                            nextDueDate,
                            endDate,
                            daysInAdvance,
                            description,
                            recurringBillLineItems)
            );
        }
    }

    /* Holds request data. Will be nested in <tt>obj</tt> */
    public static class Params {
        @SerializedName("entity")
        private String entity = "RecurringBill";

        @SerializedName("isActive")
        private String isActive;

        @SerializedName("vendorId")
        private String vendorId;

        @SerializedName("timePeriod")
        private String timePeriod;

        @SerializedName("frequencyPerTimePeriod")
        private Integer frequencyPerTimePeriod;

        @SerializedName("nextDueDate")
        private String nextDueDate;

        @SerializedName("endDate")
        private String endDate;

        @SerializedName("daysInAdvance")
        private Integer daysInAdvance;

        @SerializedName("description")
        private String description;

        @SerializedName("recurringBillLineItems")
        private List<RecurringBill.RecurringBillLineItem> recurringBillLineItems;

        Params(String isActive,
               String vendorId,
               String timePeriod,
               Integer frequencyPerTimePeriod,
               String nextDueDate,
               String endDate,
               Integer daysInAdvance,
               String description,
               List<RecurringBill.RecurringBillLineItem> recurringBillLineItems){
            this.isActive = isActive;
            this.vendorId = vendorId;
            this.timePeriod = timePeriod;
            this.frequencyPerTimePeriod = frequencyPerTimePeriod;
            this.nextDueDate = nextDueDate;
            this.endDate = endDate;
            this.daysInAdvance = daysInAdvance;
            this.description = description;
            this.recurringBillLineItems = recurringBillLineItems;
        }
    }
}
